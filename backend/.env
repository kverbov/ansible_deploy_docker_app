#
# Enviroments for docker-compose
#

WEB_HOST_PORT = 8001
DB_PORT_EXTERNAL = 5432
DUMP_DB_PORT_EXTERNAL = 54321
RABBITMQ_PORT_EXTERNAL = 5672
RABBITMQ_MANAGEMENT_PORT_EXTERNAL = 15672


#
# NGINX options
#

DOCKER_NGINX_FULL_TAG = "nexus.domain/department/nginx:1.21.6"


#
# Enviroments for TRINITY front
#


DOCKER_TRINITY_FRONT_MANAGER_IMG_FULL_TAG = "nexus.domain/department/frontend-manager:2.2.9"
DOCKER_TRINITY_FRONT_MANAGER_API_URL = https://manager.backend.cert-vip-client.domain
DOCKER_TRINITY_FRONT_MANAGER_PROF_API_URL = https://profiling.api.cert-vip-client.domain


#
#  Enviroments для prod-версии docker-compose
#


DOCKER_WEB_IMG_FULL_TAG = "nexus.domain/department/backend:1.7.0"
DOCKER_POSTGRES_IMG_FULL_TAG = "nexus.domain/general/postgres:13.2-alpine"
DOCKER_RABBITMQ_IMG_FULL_TAG = "nexus.domain/general/rabbitmq:management"



#
# Enviroments for audit-printer
#


DOCKER_AUDIT_PRINTER_FULL_TAG = "nexus.domain/department/audit_printer:1.0.4"
RABBITMQ_QUEUE_NAME = audit_log



#
# Enviroments for application
#


DEBUG = 1
SECRET_KEY = 
ALLOWED_HOST_LIST = *
TEMPLATES_DIRS_LIST = /usr/src/app/bank/templates
CLIENT_ALLOWED_HOST_LIST = *


#
# postgres settings
#
DB_NAME = bank
DB_USER = bank
DB_PASSWORD = 
DB_HOST = db1.cert.department.domain
DB_PORT = 5432




#
# Доступ к основной БД
#
DEFAULT_DB_NAME = bank
DEFAULT_DB_USER = bank
DEFAULT_DB_PASSWORD = 
DEFAULT_DB_HOST = db1.cert.department.domain
DEFAULT_DB_PORT = 5432




#
# Доступ к дамповой БД
#
DUMP_DB_NAME = bank_dump
DUMP_DB_USER = bank
DUMP_DB_PASSWORD = 
DUMP_DB_HOST = db-dump
DUMP_DB_PORT = 5432


#
# Доступ к rabbit
#
RABBITMQ_HOST = rabbitmq
RABBITMQ_PORT = 5672

CELERY_BROKER_URL = amqp://rabbitmq:5672
CELERY_RABBITMQ_MANAGEMENT_HOST = http://rabbitmq:15672
CELERY_RESULT_BACKEND = redis://redis/0
SESSION_COOKIE_NAME = sessionid_investment
ACCESS_TOKEN_LIFETIME_HOURS = 24

STATICFILES_DIRS_LIST = /usr/src/app/bank/static


#
# для постоянного хранилища должно быть персистентным volume в контейнере, одним или разными
#
STATIC_ROOT = /usr/src/storage
MEDIA_ROOT = /usr/src/storage/media



#
# Доступ к сервису генерации новостей
#
AI_NEWS_URL = https://wso2ei.rsb.dmz.rs.department/invest/news/v1.0
AI_NEWS_TOKEN = ''

#
# Фейковая авторизация менеджера,
#
#
# если пусто, то используется авторизация по LDAP
#
FAKE_MANAGER_PASSWORD = 

#
# Токен для external_exchange
#
EXTERNAL_EXCHANGE_STATIC_TOKEN = 

SILK_ENABLE = 0

LOG_LEVEL = DEBUG


#
#  Стандартные проценты комиссии для типов продуктов (0.00 < =  x < =  100.00)
#
DEFAULT_COMMISSION_MIN = 0.50
DEFAULT_COMMISSION_DEFAULT = 43831
DEFAULT_COMMISSION_MAX = 3.00


#
# Настройка отчетов
#
REPORT_STATIC_DOMAIN = http://pdf-static-web.domain
REPORT_REQUEST_URL = http://html-pdf-web.domain/pdf.php
REPORT_DOMAIN = http://html-pdf-web.domain
REPORT_BEARER_KEY = 
REPORT_ROOT = /usr/src/storage/media/reports
REPORT_DAYS_SHIFT = 365

CELERY_RESULT_BACKEND = redis://redis/0
BASICAUTH_USERS = admin:


#
# Настройка для работы с Bloomberg
#
BLOOMBERG_ROOT = /usr/src/storage/bloomberg
BLOOMBERG_FTP_HOST = ftp
BLOOMBERG_FTP_USER = 
BLOOMBERG_FTP_PASSWORD = 



#
# Clients backend options
#

WEB_CLIENT_WEB_HOST_PORT = 8002
CLIENT_SECRET_KEY = 
bank_BACKEND_BASE_URL = https://manager.backend.cert-vip-client.domain/



#
# PDF options
#

DOCKER_HTML_PDF_WEB_IMG_FULL_TAG = "nexus.domain/department/pdf/nginx:1.0.10"
DOCKER_HTML_PDF_PHP_IMG_FULL_TAG = "nexus.domain/department/pdf/php:1.0.8"
DOCKER_HTML_PDF_QUEUE_IMG_FULL_TAG = "nexus.domain/department/pdf/php:1.0.8"
DOCKER_HTML_PDF_CHROME_IMG_FULL_TAG = "nexus.domain/department/pdf/chrome:1.0.8"
DOCKER_REDIS_IMG_FULL_TAG = "nexus.domain/general/redis:6-alpine"
DOCKER_PDF_STATIC_WEB_IMG_FULL_TAG = "nexus.domain/department/pdf/static:2.0.0"


#
# PDF printing service port
#
PDF_SERVICE_PORT = 8021


#
# Static Bearer auth key
#
PDF_TO_HTML_API_KEY = 


#
# Log files lifetime (set "never" to keep all log files)
#
PDF_LOG_FILE_LIFE_TIME = 1 month


#
# Do not remove cache files (html for generation and output pdfs)
#
PDF_DEBUG_NO_REMOVING_CACHE = 0


#
# RabbitMQ external port
#
PDF_RABBIT_PORT = 8022


#
# RabbitMQ connection in url format <user>:<pass>@host:<port><path>
#
PDF_RABBIT_HOST = guest:guest@html-pdf-rabbitmq:5672/


#
# Redis connection in url format host:<port>
#
PDF_REDIS_HOST = html-pdf-redis:6379


#
# PDF static port
#
PDF_STATIC_PORT = 8020


#
# Web domain in Docker network
#
PDF_WEB_DOMAIN = html-pdf-web

#
# Chrome url in docker
#
PDF_CHROME_URL = http://html-pdf-chrome:4444

#
# php hostname for nginx "hello"
#
PDF_PHP_HOST = html-pdf-php

#
# PROVIDER-API options
#

DOCKER_PROVIDER_API_IMG_FULL_TAG = "nexus.domain/department/providers-api:0.4.1"
PERSISTENCE_DSN = postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
AMQP_DSN = amqp://guest:guest@${RABBITMQ_HOST}:5672/
PROVIDER_API_KEYS = {" "provider1":"w;", "provider2":"se;;", "provider3":""}

PROVIDER_API_HOST_PORT = 8085
HTTP_BASIC_USERNAME = 'bank-provider-api-usr1'
HTTP_BASIC_PASSWORD = ''


#
# Enviroments for profilling service
#

DOCKER_PROFILING_NGINX_IMG_FULL_TAG = "nexus.domain/department/profiling/nginx:1.1.1"
DOCKER_PROFILING_PHP_IMG_FULL_TAG = "nexus.domain/department/profiling/php:1.1.1"
DOCKER_PROFILING_DB_IMG_FULL_TAG = "nexus.domain/department/mysql:8.0.28"


#
# Внешний порт на котором доступен сервис (nginx)
#
PROFILING_SERVICE_PORT = 8086


#
# Имя контейнера с php на который nginx будет проксировать запросы
#
PROFILING_PHP_HOST = profiling-php


#
# Внешний порт для phpmyadmin (only dev) #PROFILING_PMA_SERVICE_PORT = {{ #profiling_pma_service_port }}
#


#
#  Имя ноды rabbit. Необходимо при запуске rabbitmq в docker-среде
#
PROFILING_RABBIT_NODENAME = rabbit@localhost



#
# RabbitMQ settings #PROFILING_RABBIT_PORT
#

#
#  Порт web-интерфейса управления rabbitmq #PROFILING_RABBIT_MANAGEMENT_PORT = 15672
#



#
# Параметры доступа к базе данных приложения
#
PROFILING_DB_HOST = profiling-db
PROFILING_DB_NAME = profiling_new
PROFILING_DB_USER = root
PROFILING_DB_PASS = root


#
# Yii DEBUG & ENV
#
YII_DEBUG = false
YII_ENV = prod


#
#  Настройка хранилища изображений к опросам
#
PROFILING_ANSWER_BASE_DIR = /profiling/storage/answers
PROFILING_ANSWER_BASE_URL = http://192.168.1.2:8000/files/answers


#
#  Настройки для работы с RabbitMQ
#
#
# Доступ к RabbitMQ
#
PROFILING_RABBIT_HOST = guest:guest@profiling-rabbitmq:5672/


#
# Название очереди с которую будут отправляться результаты профилирования
#
PROFILING_RABBIT_RESULTS_CHANNEL_NAME = profiling_results




